<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>Custom WhatsApp-like Chat</title>
  <style>
    body {
      font-family: Arial, sans-serif;
      margin: 0;
      padding: 0;
      background-color: #e5ddd5;
    }

    .container {
      width: 100%;
      max-width: 600px;
      margin: 20px auto;
      background-color: #ffffff;
      border-radius: 10px;
      box-shadow: 0 2px 10px rgba(0, 0, 0, 0.1);
      overflow: hidden;
      display: flex;
      flex-direction: column;
      height: 90vh;
    }

    .header {
      background-color: #075e54;
      color: white;
      padding: 15px;
      display: flex;
      align-items: center;
      gap: 10px;
    }

    .header img {
      width: 40px;
      height: 40px;
      border-radius: 50%;
    }

    .header .title {
      font-size: 18px;
      font-weight: bold;
    }

    .chat-box {
      flex-grow: 1;
      padding: 10px;
      overflow-y: auto;
      display: flex;
      flex-direction: column;
      background-color: #e5ddd5;
    }

    .message {
      margin: 5px 0;
      display: flex;
      align-items: flex-end;
      gap: 10px;
    }

    .message img {
      width: 30px;
      height: 30px;
      border-radius: 50%;
    }

    .message-content {
      max-width: 70%;
      padding: 10px;
      border-radius: 10px;
      font-size: 14px;
      word-wrap: break-word;
    }

    .sent {
      flex-direction: row-reverse;
    }

    .sent .message-content {
      background-color: #dcf8c6;
      border-bottom-right-radius: 0;
    }

    .received .message-content {
      background-color: #ffffff;
      border-bottom-left-radius: 0;
    }

    .typing-indicator {
      margin: 5px 10px;
      font-style: italic;
      color: gray;
      font-size: 12px;
    }

    .input-section {
      padding: 10px;
      background-color: #f0f0f0;
      display: flex;
      flex-direction: column;
      gap: 10px;
    }

    .input-section textarea {
      width: 100%;
      height: 60px;
      padding: 10px;
      border: 1px solid #ccc;
      border-radius: 10px;
      font-size: 14px;
      resize: none;
    }

    .input-section button {
      padding: 10px;
      background-color: #075e54;
      color: white;
      border: none;
      border-radius: 10px;
      cursor: pointer;
      font-size: 16px;
    }

    .input-section button:hover {
      background-color: #0a7d62;
    }
  </style>
</head>
<body>
  <div class="container">
    <!-- Chat Header -->
    <div class="header">
      <img src="https://via.placeholder.com/40" alt="User Avatar">
      <div class="title">WhatsApp Chat</div>
    </div>

    <!-- Chat Box -->
    <div class="chat-box" id="chatBox">
      <!-- Dynamic chat messages will appear here -->
    </div>

    <!-- Typing Indicator -->
    <div class="typing-indicator" id="typingIndicator" style="display: none;">
      X Æ A-Xii is typing...
    </div>

    <!-- Input Section -->
    <div class="input-section">
      <textarea id="dialogueInput" placeholder="Insert your dialogue here (e.g., User: Hello\nBot: Hi there!)"></textarea>
      <button onclick="startChat()">Start Chat</button>
    </div>
  </div>

  <script>
    const chatBox = document.getElementById('chatBox');
    const typingIndicator = document.getElementById('typingIndicator');
    const dialogueInput = document.getElementById('dialogueInput');

    let messages = [];
    let messageIndex = 0;

    /**
     * Function to display a message in the chat box
     * @param {string} sender - Either "user" or "bot"
     * @param {string} text - The message text
     */
    function displayMessage(sender, text) {
      const message = document.createElement('div');
      message.classList.add('message', sender === 'user' ? 'sent' : 'received');

      const profilePic = document.createElement('img');
      profilePic.src = sender === 'user' 
        ? 'https://via.placeholder.com/30/0000FF' 
        : 'https://via.placeholder.com/30/FF0000';
      profilePic.alt = sender === 'user' ? 'User' : 'Bot';

      const messageContent = document.createElement('div');
      messageContent.classList.add('message-content');
      messageContent.textContent = text;

      message.appendChild(profilePic);
      message.appendChild(messageContent);
      chatBox.appendChild(message);
      chatBox.scrollTop = chatBox.scrollHeight;
    }

    /**
     * Simulates typing for user, displaying words one by one
     * @param {string} text - The message to display
     * @param {Function} callback - The function to execute after typing is complete
     */
    function simulateUserTyping(text, callback) {
      const words = text.split(" ");
      let currentWordIndex = 0;
      const interval = setInterval(() => {
        if (currentWordIndex < words.length) {
          const partialText = words.slice(0, currentWordIndex + 1).join(" ");
          if (currentWordIndex === 0) {
            // Add the user's message bubble only once
            displayMessage("user", partialText);
          } else {
            // Update the content of the last bubble
            const lastMessage = chatBox.querySelector(".sent:last-child .message-content");
            lastMessage.textContent = partialText;
          }
          currentWordIndex++;
        } else {
          clearInterval(interval);
          callback();
        }
      }, 300); // Adjust typing speed (300ms per word)
    }

    /**
     * Simulates typing for bot, with an indicator
     * @param {string} text - The message to display
     * @param {Function} callback - The function to execute after typing is complete
     */
    function simulateBotTyping(text, callback) {
      typingIndicator.style.display = 'block';

      const words = text.split(" ");
      let currentWordIndex = 0;
      const interval = setInterval(() => {
        if (currentWordIndex < words.length) {
          typingIndicator.textContent = `X Æ A-Xii is typing: ${words
            .slice(0, currentWordIndex + 1)
            .join(" ")}`;
          currentWordIndex++;
        } else {
          clearInterval(interval);
          typingIndicator.style.display = 'none';
          callback();
        }
      }, 400); // Adjust bot typing speed (400ms per word)
    }

    /**
     * Starts the chat animation based on the user's input
     */
    function startChat() {
      // Reset chat box and messages
      chatBox.innerHTML = '';
      messages = [];
      messageIndex = 0;

      // Parse the dialogue input
      const dialogueText = dialogueInput.value.trim();
      if (dialogueText) {
        const lines = dialogueText.split("\n");
        lines.forEach(line => {
          const [sender, ...messageParts] = line.split(":");
          const message = messageParts.join(":").trim();
          if (sender && message) {
            messages.push({ sender: sender.toLowerCase(), text: message });
          }
        });

        // Start the conversation
        playNextMessage();
      }
    }

    /**
     * Plays the next message in the dialogue sequence
     */
    function playNextMessage() {
      if (messageIndex < messages.length) {
        const { sender, text } = messages[messageIndex];
        if (sender === "user") {
          simulateUserTyping(text, () => {
            messageIndex++;
            playNextMessage();
          });
        } else if (sender === "bot") {
          simulateBotTyping(text, () => {
            displayMessage(sender, text);
            messageIndex++;
            playNextMessage();
          });
        }
      }
    }
  </script>
</body>
</html>
